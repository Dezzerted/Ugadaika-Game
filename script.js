let modal = document.getElementById('myModal');
let modal2 = document.getElementById('myModal2');
let btn = document.getElementById("myBtn");
let btn2 = document.getElementById("myBtn2");
let close1 = document.getElementById("btnClose1");
let close2 = document.getElementById("btnClose2");
let save1 = document.getElementById("btnSave1");
let save2 = document.getElementById("btnSave2");
let minimum = document.getElementById("inMin");
let maximum = document.getElementById("inMax");
let inputMin = minimum.value;
let inputMax = maximum.value;
let minValue;
let maxValue;
let answerNumber = Math.floor((minValue + maxValue) / 2);
let orderNumber = 0;

const orderNumberField = document.getElementById('orderNumberField');
const answerField = document.getElementById('answerField');

orderNumberField.innerText = orderNumber;

btn.addEventListener('click', stepOne);
function stepOne () {
    modal.style.display = "block"
}

save1.addEventListener('click', saveOne);
function saveOne () {
    inputMin = minimum.value;
    minValue = parseInt((inputMin < -999) ? -999 : inputMin);
    console.log(minValue);
}

close1.addEventListener('click', closeOne);
function closeOne () {
    modal.style.display = "none"
}

btn2.addEventListener('click', stepTwo);
function stepTwo () {
    modal2.style.display = "block"
}

save2.addEventListener('click', saveTwo);
function saveTwo () {
    inputMax = maximum.value;
    maxValue = parseInt((inputMax > 999) ? 999 : inputMax); 
    console.log(maxValue);
}

close2.addEventListener('click', closeTwo);
function closeTwo () {
    modal2.style.display = "none";
    if (Number.isNaN(minValue) || Number.isNaN(maxValue)){
        alert('–í–≤–µ–¥–µ–Ω–æ –Ω–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ Min –∏–ª–∏ Max.\n–ê –Ω—É –ø–æ–≤—Ç–æ—Ä–∏–ª –®–ê–ì 1 –∏ –®–ê–ì 2!!!')
    };
    if (Number.isInteger(minValue) && Number.isInteger(maxValue)){
        alert(`–ó–∞–≥–∞–¥–∞–π—Ç–µ –ª—é–±–æ–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –æ—Ç ${minValue} –¥–æ ${maxValue}, –∞ —è –µ–≥–æ —É–≥–∞–¥–∞—é`);
        answerNumber = Math.floor((minValue + maxValue) / 2);
        orderNumber = 1;
        
        btn.disabled = true;
        btn.textContent = '–ù–µ–∞–∫—Ç–∏–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞.\n–ù–∞–∂–∞—Ç—å –ó–∞–Ω–æ–≤–æ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏.';

        btn2.disabled = true;
        btn2.textContent = '–ù–µ–∞–∫—Ç–∏–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞.\n–ù–∞–∂–∞—Ç—å –ó–∞–Ω–æ–≤–æ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏.';

        const orderNumberField = document.getElementById('orderNumberField');
        const answerField = document.getElementById('answerField');

        orderNumberField.innerText = orderNumber;

        let changedNumToText = useNumInWords(answerNumber);
        answerField.innerText = `–í—ã –∑–∞–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ ${changedNumToText }?`
        console.log(minValue + maxValue)};
        
    };
    
    let gameRun = true;

document.getElementById('btnRetry').addEventListener('click', gameRestart);
document.getElementById('btnOver').addEventListener('click', btnUp);
document.getElementById('btnLess').addEventListener('click', btnDown);
document.getElementById('btnEqual').addEventListener('click', btnVictory);

function gameRestart () {
modal = document.getElementById('myModal');
modal2 = document.getElementById('myModal2');
btn = document.getElementById("myBtn");
btn2 = document.getElementById("myBtn2");
close1 = document.getElementById("btnClose1");
close2 = document.getElementById("btnClose2");
save1 = document.getElementById("btnSave1");
save2 = document.getElementById("btnSave2");
minimum = document.getElementById("inMin");
maximum = document.getElementById("inMax");
inputMin = minimum.value;
inputMax = maximum.value;
minValue;
maxValue;
answerNumber = Math.floor((minValue + maxValue) / 2);
orderNumber = 0;

btn.disabled = false;
btn.textContent = '–®–ê–ì 1. –ù–∞–∂–∞—Ç—å –¥–ª—è –≤–≤–æ–¥–∞ MIN';

btn2.disabled = false;
btn2.textContent = '–®–ê–ì 2. –ù–∞–∂–∞—Ç—å –¥–ª—è –≤–≤–æ–¥–∞ MAX';

minimum.value = "";
maximum.value = "";

const orderNumberField = document.getElementById('orderNumberField');
const answerField = document.getElementById('answerField');
answerField.innerText = '–í—ã –Ω–∏—á–µ–≥–æ –Ω–µ –∑–∞–≥–∞–¥–∞–ª–∏!\n–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –®–ê–ì 1 –∏ –®–ê–ì 2!';

orderNumberField.innerText = orderNumber;

btn.addEventListener('click', stepOne);

save1.addEventListener('click', saveOne);

close1.addEventListener('click', closeOne);

btn2.addEventListener('click', stepTwo);

save2.addEventListener('click', saveTwo);

close2.addEventListener('click', closeTwo);

gameRun = true;
}


function btnUp () {
        if (gameRun){
        if (minValue === maxValue){
            const phraseRandom = Math.round( Math.random() * 3);
            let answerPhrase = ''; 
            if (phraseRandom === 1) {
                answerPhrase = '–í—ã –∑–∞–≥–∞–¥–∞–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —á–∏—Å–ª–æ!\n–ó–∞–Ω–æ–≤–æ, 2pizza!\n\u{1F624}';
            } else if (phraseRandom === 2) {
                answerPhrase = '–Ø —Å–¥–∞—é—Å—å..\n–ñ–º–∏ –ó–∞–Ω–æ–≤–æ!\n\u{2620}';
            } else {
                answerPhrase = '–î–∞–≤–∞–π –∑–∞–Ω–æ–≤–æ, –±–µ—Å–∏—à—å!\n\u{1F92C}';
            }
            
            answerField.innerText = answerPhrase;
            gameRun = false;
        } else {
            minValue = answerNumber + 1;
            answerNumber = Math.floor((minValue + maxValue) / 2);
            orderNumber++;
            orderNumberField.innerText = orderNumber;

            const phraseRandomQuestion = Math.round( Math.random() * 3);
            changedNumToText = useNumInWords(answerNumber);
            let questionPhrase = '';
            if (phraseRandomQuestion === 1) {
                questionPhrase = `–í—ã –∑–∞–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ ${changedNumToText }?\n\u{1F64A}`;
            } else if (phraseRandomQuestion === 2) {
                questionPhrase = `–ß—É—é, —á—Ç–æ –≤–∞—à–µ —á–∏—Å–ª–æ ${changedNumToText }\n\u{1F649}`;
            } else {
                questionPhrase = `–ó—É–± –¥–∞—é, —á—Ç–æ ${changedNumToText }\n\u{1F648}`;
            }
            answerField.innerText = questionPhrase;
        }
    }
}


function btnDown () {
    if (gameRun){
        if (minValue === maxValue){
            const phraseRandomLess = Math.round( Math.random() * 3);
            let answerPhraseLess = ''; 
            if (phraseRandomLess === 1) {
                answerPhraseLess = '–í—ã –∑–∞–≥–∞–¥–∞–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —á–∏—Å–ª–æ!\n–ó–∞–Ω–æ–≤–æ, 2pizza!\n\u{1F624}';
            } else if (phraseRandomLess === 2) {
                answerPhraseLess = '–Ø —Å–¥–∞—é—Å—å...\n–ñ–º–∏ –ó–∞–Ω–æ–≤–æ!\n\u{2620}';
            } else {
                answerPhraseLess = '–î–∞–≤–∞–π –∑–∞–Ω–æ–≤–æ, –±–µ—Å–∏—à—å!\n\u{1F92C}';
            }
            
            answerField.innerText = answerPhraseLess;
            gameRun = false;
        } else {
            maxValue = answerNumber - 1;
            answerNumber = Math.ceil((minValue + maxValue) / 2);
            orderNumber++;
            orderNumberField.innerText = orderNumber;

            const phraseRandomQuestionLess = Math.round( Math.random() * 3);
            changedNumToText = useNumInWords(answerNumber);
            let questionPhraseLess = '';
            if (phraseRandomQuestionLess === 1) {
                questionPhraseLess = `–í—ã –∑–∞–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ ${changedNumToText }?\n\u{1F64A}`;
            } else if (phraseRandomQuestionLess === 2) {
                questionPhraseLess = `–ß—É—é, —á—Ç–æ –≤–∞—à–µ —á–∏—Å–ª–æ ${changedNumToText }\n\u{1F649}`;
            } else {
                questionPhraseLess = `–ó—É–± –¥–∞—é, —á—Ç–æ ${changedNumToText }\n\u{1F648}`;
            }
            answerField.innerText = questionPhraseLess;
        }
    }
} 

function btnVictory () {
    if (gameRun){
        const phraseVictory = Math.round( Math.random() * 3);
        let victoryPhrase = '';
        if (phraseVictory === 1) {
            victoryPhrase = '–Ø –≤—Å–µ–≥–¥–∞ —É–≥–∞–¥—ã–≤–∞—é!\n\u{1F60E}';
        } else if (phraseVictory === 2) {
            victoryPhrase = '–ü—Ñ—Ñ—Ñ! –í–∞—â–µ –∏–∑–∏!\nüí™';
        } else {
            victoryPhrase = '–î–∞–≤–∞–π —á—Ç–æ-–Ω–∏–±—É–¥—å –ø–æ—Å–ª–æ–∂–Ω–µ–µ, –∞???\nü•≥';
        }
        answerField.innerText = victoryPhrase;

    gameRun = false;
}
}


function useNumInWords(answerNumber){
    if (changeNumToWords(answerNumber).length <= 20){
        return changeNumToWords(answerNumber)
    }
        else {return answerNumber}
        }


function changeNumToWords(answerNumber){
    if (typeof answerNumber === 'number' && answerNumber >= -999 && answerNumber <= 999){
        if (answerNumber === 0){
            return '–Ω–æ–ª—å';
        }
        if (answerNumber){
            const ones = ['–Ω–æ–ª—å', '–æ–¥–∏–Ω', '–¥–≤–∞', '—Ç—Ä–∏', '—á–µ—Ç—ã—Ä–µ', '–ø—è—Ç—å', '—à–µ—Å—Ç—å', '—Å–µ–º—å', '–≤–æ—Å–µ–º—å' ,'–¥–µ–≤—è—Ç—å', '–¥–µ—Å—è—Ç—å', '–æ–¥–∏–Ω–Ω–∞–¥—Ü–∞—Ç—å', '–¥–≤–µ–Ω–∞–¥—Ü–∞—Ç—å', '—Ç—Ä–∏–Ω–∞–¥—Ü–∞—Ç—å', '—á–µ—Ç—ã—Ä–Ω–∞–¥—Ü–∞—Ç—å', '–ø—è—Ç–Ω–∞–¥—Ü–∞—Ç—å', '—à–µ—Å—Ç–Ω–∞–¥—Ü–∞—Ç—å', '—Å–µ–º–Ω–∞–¥—Ü–∞—Ç—å' ,'–≤–æ—Å–µ–º–Ω–∞–¥—Ü–∞—Ç—å', '–¥–µ–≤—è—Ç–Ω–∞–¥—Ü–∞—Ç—å'];
            const tens = ['', '', '–¥–≤–∞–¥—Ü–∞—Ç—å', '—Ç—Ä–∏–¥—Ü–∞—Ç—å', '—Å–æ—Ä–æ–∫', '–ø—è—Ç—å–¥–µ—Å—è—Ç', '—à–µ—Å—Ç—å–¥–µ—Å—è—Ç', '—Å–µ–º—å–¥–µ—Å—è—Ç', '–≤–æ—Å–µ–º—å–¥–µ—Å—è—Ç', '–¥–µ–≤—è–Ω–æ—Å—Ç–æ'];
            const hundreds = ['', '—Å—Ç–æ', '–¥–≤–µ—Å—Ç–∏', '—Ç—Ä–∏—Å—Ç–∞', '—á–µ—Ç—ã—Ä–µ—Å—Ç–∞', '–ø—è—Ç—å—Å–æ—Ç', '—à–µ—Å—Ç—å—Å–æ—Ç', '—Å–µ–º—å—Å–æ—Ç', '–≤–æ—Å–µ–º—å—Å–æ—Ç', '–¥–µ–≤—è—Ç—å—Å–æ—Ç'];
            let otvet = '';
            if (answerNumber < 0){
                otvet += '–º–∏–Ω—É—Å '
                answerNumber = Math.abs(answerNumber)
            }
            if (answerNumber >= 100){
                otvet += hundreds[Math.floor(answerNumber/100)] + ' ';
                answerNumber %= 100;
            }
            if (answerNumber >= 20){
                otvet += tens[Math.floor(answerNumber/10)] + ' ';
                answerNumber %= 10;
            }
            if (answerNumber > 0){
                if (answerNumber < 20){
                    otvet += ones[answerNumber] + ' ';
                } else {otvet += ones[Math.floor(answerNumber % 10)] + ' ';}
            } return otvet.trim();
        } else {return answerNumber;}
    } 
}  
    
    
    
